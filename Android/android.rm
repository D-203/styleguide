
## Android编码规范
#### 1 类的编码规范
- **常量 Constant**  
  
	单词全部大写  
	单词之间用下划线_分割  
	单词个数不超过4个
  

- **成员变量 Field**  
  
	一般用首字母m(Menber)开头  
    采用驼峰命名规则 mLoginBtn

- **公开方法和私有方法 Public methods  Private methods**  

	成员方法采用驼峰命名规则  
	工具类中的方法一般都定义为public  
	在多处被用到的方法定义为public  
	只处理该类的内部逻辑的方法定义为private

- **方法重写和方法的回调 Override methods and callbacks**  

    方法的重写加上注解@override  
	修改或者补充父类的方法时，才用Override
	回调一般用于框架，在父类中定义的抽象或者空实现的方法，指定了调用的时机  


- **接口 interfaces**  

	接口是callbacks的另外的一种实现  
	接口可以和类完全解耦  

#### 2 资源文件编码规范  

- **字符串 string.xml**  

	所有的有关文字描述都应放在string.xml 中
	字符串的命名规则尽量简洁，一般是文字的简短描述,都有小写字母，单词之间用下滑线隔开 <string name="login">登陆</string>
	数组资源用<string-array>描述  

- **id**  

	id在所在文件里要唯一
	id都用小写字母，单词之间用下划线隔开  
	首单词代表控件类型，第二个单词代表控件用途，第三个单词代表控件范围  

- **dimen**  

	控件的宽高是具体数值时，把数值写进dimen，然后用@dimen/去引用  
	不同的屏幕，可能需要写多套dimen，来适配  

- **drawable 图片资源**  

	自定义shape，及.9文件放在drawable中 用@drawable/
	小写字母命名，首单词代表用途，例如bg指用于背景，第二个单词代表作用的范围，第三个单词代表具体的控件  

- **mipmap 图片资源**  

	项目中用到的.png .jpg的图片放在mipmap中
    可能需要多套图片做适配
	小写字母命名，首单词代表用途，例如bg指用于背景，第二个单词代表作用的范围，第三个单词代表具体的控件  
 
- **color 颜色资源**  

	颜色放在color.xml中
	直接用英文表示对于的颜色<color name="white">#fff</color>
	或者首单词代表作用范围，第二个单词 代表作用控件，比如bg_login_btn,代表登录按钮的背景色  

- **layout 布局资源**
	
	实现界面与逻辑的分离,都用layout文件都用小写字母命名，单词之间用下划线隔开
	多用LinearLayout与RelativeLayout
	ViewTree嵌套层级不能太多，不能超过5级  

- **style 样式资源**  
  
	把相同风格的控件的样式抽离出来写成style ，用@style/引用
	都用小写字母，单词之间用下划线分割
	一个主题对应一套style
	  
  

	
  
